package com.krakedev.inventarios.bdd;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.krakedev.inventarios.entidades.Categorias;
import com.krakedev.inventarios.entidades.Producto;
import com.krakedev.inventarios.entidades.UnidadDeMedida;
import com.krakedev.inventarios.excepciones.KrakeDevException;
import com.krakedev.inventarios.utils.ConexionBDD;

public class ProductosBDD {

public void actualizar(Producto producto) throws KrakeDevException {
	Connection con = null;
	PreparedStatement ps=null;

	try {
		con=ConexionBDD.obtenerConexion();
		ps=con.prepareStatement("update productos set nombre=?, udm=?, precio_de_venta=?, tiene_iva=?, coste=?, categoria=?, stock=? where codigo=?");
		ps.setString(1, producto.getNombre());
		ps.setString(2, producto.getUDM().getNombre());
		ps.setBigDecimal(3, producto.getPrecioVenta());
		ps.setBoolean(4, producto.isTineIVA());
		ps.setBigDecimal(5, producto.getCoste());
		ps.setInt(6, producto.getCategoria().getCogidoCat());
		ps.setInt(7, producto.getStock());
		ps.setInt(8, producto.getCodigo());
		
		ps.executeUpdate();
		
		
	} catch (SQLException e) {
		e.printStackTrace();
		throw new KrakeDevException("Error al actualizar el pedido. Detalle:"+e.getMessage());
	} catch (KrakeDevException e) {
		throw e;
	}finally {
		if(con!=null) {
		try {
			con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		}
	}
}
public ArrayList<Producto> buscarProducto(int codigo) throws KrakeDevException{
	ArrayList<Producto> productos=new ArrayList<Producto>();
	Connection con=null;
	PreparedStatement ps=null;
	ResultSet rs=null;
	Producto producto=null;
	try {
		con=ConexionBDD.obtenerConexion();
		ps=con.prepareStatement("Select prod.nombre as nombre_producto,udm.nombre as nombre_udm, udm.descripcion as descripcion_udm, "
				+ "cast(prod.precio_de_venta as decimal(6,2)),prod.tiene_iva, cast(prod.coste as decimal(5,4)), "
				+ "cat.nombre as nombre_categoria, prod.stock, cat.codigo_cat "
				+ "from productos prod, unidades_medida udm, categorias cat "
				+ "where prod.udm=udm.nombre "
				+ "and prod.categoria=cat.codigo_cat "
				+ "and prod.codigo=?");
		ps.setInt(1, codigo);
		rs=ps.executeQuery();
		
		while(rs.next()) {
			String nombreProducto=rs.getString("nombre_producto");
			String nombreUDM=rs.getString("nombre_udm");
			String descripcion=rs.getString("descripcion_udm");
			BigDecimal precioVenta=rs.getBigDecimal("precio_de_venta");
			boolean tieneIVA=rs.getBoolean("tiene_iva");
			BigDecimal coste=rs.getBigDecimal("coste");
			int codigoCategoria=rs.getInt("codigo_cat");
			String nombreCategoria=rs.getString("nombre_categoria");
			int stock=rs.getInt("stock");
			
			UnidadDeMedida udm=new UnidadDeMedida();
			udm.setNombre(nombreUDM);
			udm.setDescripcion(descripcion);
			
			Categorias cat=new Categorias();
			cat.setCogidoCat(codigoCategoria);
			cat.setNombre(nombreCategoria);
			
			producto=new Producto();
			producto.setNombre(nombreProducto);
			producto.setUDM(udm);
			producto.setPrecioVenta(precioVenta);
			producto.setTineIVA(tieneIVA);
			producto.setCoste(coste);
			producto.setCategoria(cat);
			producto.setStock(stock);
			
			productos.add(producto);
		}
		
	} catch (KrakeDevException e) {
		e.printStackTrace();
		throw e;
	} catch (SQLException e) {
		e.printStackTrace();
		throw new KrakeDevException("Error al consultar. Detalle:"+e.getMessage());
	}
	
	return productos;
}

}